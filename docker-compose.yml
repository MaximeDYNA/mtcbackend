version: '3.1'


x-registries:
  default:
    auth:
      username: prooftagcatis
      password: prooftagcatis@2024

services:
  caisse:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8086:8086"
    depends_on:
      - redis-server
      - db
      - Elasticsearch
    networks:
      - backend
      - elk  
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/uuidstring?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_REDIS_HOST: redis
      SPRING_ELASTICSEARCH_CLUSTER_NODES: elasticsearch
      SPRING_KEYCLOAK_AUTH: http://51.195.11.201:8090/auth
      SPRING_KEYCLOAK_SECRET: 33a80056-95fb-4857-84b7-91c16fe2f9c5
      # SPRING_TASK_EXECUTOR_THREAD_COUNT: 10
    # deploy:
    #   replicas: 4
    #   resources:
    #     limits:
    #       cpus: '0.25'
    #       memory: 50M

  prometheus:
    image: prom/prometheus:v2.44.0
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:9.5.2
    container_name: grafana
    ports:
      - "3000:3000"
    restart: unless-stopped
    volumes:
      - ./datasources:/etc/grafana/provisioning/datasources

  redis-server:
    image: redis:latest
    restart: always
    container_name: redis
    command: ["redis-server", "--appendonly", "yes","--maxmemory", "2gb", "--maxmemory-policy", "allkeys-lru"]
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - backend
  # adminfront:
  #   image: adminditros
  #   # build:
  #   #   context: ./adminDitros
  #   #   dockerfile: Dockerfile
  #   restart: always
  #   depends_on:
  #     - caisse
  #   ports:
  #     - "8094:8080"
  #   networks:
  #     - backend
  #   environment:
  #    VUE_APP_SERVER_URL: 51.195.11.201
  #    VUE_APP_MTC_PORT: 8086
  #    VUE_APP_HOME_PORT: 8094
  #    VUE_APP_KEYCLOAK_PORT: 8090
  #    VUE_APP_KEYCLOAK_URL: 51.195.11.201 
  #    VUE_APP_REPORTING_URL: 51.195.11.201
  #    VUE_APP_REPORTING_PORT: 8080

  redis-commander:
    image: rediscommander/redis-commander:latest
    restart: always
    container_name: redis-commander
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis-server
    networks:
      - backend

  Elasticsearch:
    image: elasticsearch:7.16.2
    container_name: elasticsearch
    restart: always
    volumes:
      - elastic_data:/usr/share/elasticsearch/data/
    environment:
      - bootstrap.memory_lock=true
      - node.name=elasticsearch
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
    ulimits:
      memlock:
        soft: -1
        hard: -1 
    ports:
      - '9200:9200'
      - '9300:9300'
    networks:
      - elk

  # filebeat:
  #   build:
  #     context: .
  #     dockerfile: ./Dockerfile.filebeat
  #   container_name: filebeat
  #   hostname: mydockerhost
  #   restart: unless-stopped
  #   labels:
  #     co.elastic.logs/enabled: "false"
  #   networks:
  #     - elk
  #   volumes:
  #     - type: bind
  #       source: /var/run/docker.sock
  #       target: /var/run/docker.sock
  #     - type: bind
  #       source: /var/lib/docker
  #       target: /var/lib/docker
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "10m"
  #       max-file: "2"
  
  # Logstash:
  #   image: logstash:7.16.2
  #   container_name: logstash
  #   restart: always
  #   volumes:
  #     - ./logstash/:/logstash_dir
  #     - ./metadata/:/usr/share/logstash/metadata
  #     - C:\Users\HP\Desktop\mtcBackend\mysql-connector-j-8.3.0.jar:/usr/share/logstash/mysql-connector-j-8.3.0.jar
  #   command: logstash -f /logstash_dir/logstash.conf --config.reload.automatic
  #   ports:
  #     - "5044:5044"
  #     - "5000:5000/tcp"
  #     - "5000:5000/udp"
  #     - "9600:9600"
  #     - "4560:4560"
  #   depends_on:
  #     - Elasticsearch
  #     - db
  #   environment:
  #     LS_JAVA_OPTS: "-Xmx256m -Xms256m"    
  #   networks:
  #     - elk
  #     - backend

  # Kibana:
  #   image: kibana:7.16.2
  #   container_name: kibana
  #   restart: always       
  #   ports:
  #   - '5601:5601'
  #   environment:
  #     - ELASTICSEARCH_URL=http://elasticsearch:9200  
  #   depends_on:
  #     - Elasticsearch  
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "10m"
  #       max-file: "2"
  #   networks:
  #     - elk

  db:
    image: mysql:5.7
    command: --max_allowed_packet=32505856
    container_name: mysql
    restart: on-failure
    ports:
      - "3308:3306"
    volumes:
      - "./db:/var/lib/mysql"
      # - "./dbdata:/var/lib/mysql"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: uuidstring
      MYSQL_USER: root
      MYSQL_PASSWORD: root
    networks:
      - backend
  
  # controller:
  #   image: controller
  #   environment:
  #     SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/uuidstring?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
  #     SPRING_DATASOURCE_USERNAME: root
  #     SPRING_DATASOURCE_PASSWORD: root
  #   depends_on:
  #     - db
  #     - caisse
  #   ports:
  #     - "8080:8080"
  #   networks:
  #     - backend

  # front: 
  #   image: mtcfront
  #   restart: always
  #   depends_on:
  #     - caisse
  #   ports:
  #     - "8085:8085"
  #   networks:
  #     - backend
  #   environment:
  #    VUE_APP_SERVER_URL: caisse
    #  VUE_APP_MTC_PORT: 8086
    #  VUE_APP_HOME_PORT: 8085
    #  VUE_APP_KEYCLOAK_PORT: 8090
    #  VUE_APP_KEYCLOAK_URL: 51.195.11.201
    #  VUE_APP_REPORTING_URL: 51.195.11.201
    #  VUE_APP_REPORTING_PORT: 8080
    #  VUE_APP_CLIENT_URL: 51.195.11.201
  
volumes:
  elastic_data: {}
  redis_data: {}

networks:
  elk:
    driver: bridge
  backend:
    driver: bridge



