spring.jpa.hibernate.ddl-auto=validate
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:root}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:root}

signature.disk.path=/opt/uploaded/signatures/
signature.disk.load=file:///opt/uploaded/signatures/
signature.server.path=/uploaded/signatures/

static.image.path=/images/
static.image.disk.load=file:///opt/uploaded/images/
uploaded.image=/opt/uploaded/images/

pv.path=/opt/PV
pv.resource.path=file:///opt/PV/
spring.transaction.default-timeout=10000


spring.jpa.properties.hibernate.max_fetch_depth=0
hibernate.max_fetch_depth=0
spring.jpa.open-in-view=false
hibernate.generate_statistics=true
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE


# logging.level.org.elasticsearch.client.RestClient=DEBUG
# spring.jpa.show-sql=true
# spring.jpa.properties.hibernate.format_sql=true


 # Maximum queue length for incoming connection requests when all possible request processing threads are in use.
server.tomcat.accept-count=100
server.tomcat.max-connections=10000 
# Maximum number of connections that the server accepts and processes at any given time.
server.tomcat.max-threads=200 
# Maximum amount of worker threads.
server.tomcat.min-spare-threads=10 
# Minimum amount of worker threads.

# flemming added config for database pooling
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.pool-name=CATISHikariCP
spring.datasource.hikari.max-lifetime=2000000
spring.datasource.hikari.connection-timeout=30000

# logging.level.org.hibernate=TRACE


# logging.level.root=INFO
# logging.level.org.springframework=DEBUG

# i added
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.operationsSorter=method
springdoc.api-docs.path=/api-docs
spring.mvc.static-path-pattern=/swagger*

springdoc.swagger-ui.csrf.enabled=true

# spring.resources.static-locations=classpath:/static/,classpath:/public/,file:./images/
# spring.data.elasticsearch.repositories.enabled=true
# elasticsearch.host=${SPRING_ELASTICSEARCH_CLUSTER_NODES:localhost}:9200
spring.cache.type=redis
spring.redis.host=${SPRING_REDIS_HOST:localhost}
spring.redis.port=6379
spring.cache.redis.cache-null-values=false


# end i added
# logging.level.org.springframework.security=DEBUG

admin.keycloak=admin-cli
admin.keycloak.login=catis
admin.keycloak.password=prooftag

keycloak.realm=mtckeycloak
keycloak.auth-server-url=${SPRING_KEYCLOAK_AUTH}
keycloak.ssl-required=none
# logging.level.org.keycloak=DEBUG
#Allow beand definition overriding
# spring.main.allow-bean-definition-overriding=true
keycloak.resource=mtccaisse
keycloak.credentials.secret=${SPRING_KEYCLOAK_SECRET}
keycloak.bearer-only=true
keycloak.use-resource-role-mappings=true
#keycloak.policy-enforcer-config.http-method-as-scope=true
keycloak.principal-attribute=preferred_username
keycloak.cors=true 
rapport.machine.directory=D:\\Catis Tools\\Rapport machine Traiter
# rapport.machine.directory=D:\\Catis Tools\\Rapport machine Traiter
entity.package.name=com.catis.model.entity

events.connection.timeout=39600000



keycloak.policy-enforcer-config.enforcement-mode=permissive
keycloak.securityConstraints[0].authRoles[0]=*
keycloak.securityConstraints[0].securityCollections[0].name=api
keycloak.securityConstraints[0].securityCollections[0].patterns[0]=/api/v1/*


#public path
keycloak.policy-enforcer-config.paths[0].path=/uploaded/*
keycloak.policy-enforcer-config.paths[0].enforcementMode=DISABLED
keycloak.policy-enforcer-config.paths[1].path=/images/*
keycloak.policy-enforcer-config.paths[1].enforcementMode=DISABLED
keycloak.policy-enforcer-config.paths[2].path=/fonts/*
keycloak.policy-enforcer-config.paths[2].enforcementMode=DISABLED
keycloak.policy-enforcer-config.paths[3].path=/js/*
keycloak.policy-enforcer-config.paths[3].enforcementMode=DISABLED
keycloak.policy-enforcer-config.paths[4].path=/api/v1/organisation
keycloak.policy-enforcer-config.paths[4].enforcementMode=DISABLED
keycloak.policy-enforcer-config.paths[5].path=/public/*
keycloak.policy-enforcer-config.paths[5].enforcementMode=DISABLED

# i added 

keycloak.policy-enforcer-config.paths[6].path=/swagger-ui.index.html
keycloak.policy-enforcer-config.paths[6].enforcementMode=DISABLED

keycloak.policy-enforcer-config.paths[7].path=/swagger-ui/*
keycloak.policy-enforcer-config.paths[7].enforcementMode=DISABLED

keycloak.policy-enforcer-config.paths[8].path=/v2/api-docs*
keycloak.policy-enforcer-config.paths[8].enforcementMode=DISABLED

keycloak.policy-enforcer-config.paths[9].path=/swagger-resources/*
keycloak.policy-enforcer-config.paths[9].enforcementMode=DISABLED

keycloak.policy-enforcer-config.paths[10].path=/api-docs*
keycloak.policy-enforcer-config.paths[10].enforcementMode=DISABLED

keycloak.policy-enforcer-config.paths[11].path=/swagger-config.json
keycloak.policy-enforcer-config.paths[11].enforcementMode=DISABLED

keycloak.policy-enforcer-config.paths[12].path=/configuration*
keycloak.policy-enforcer-config.paths[12].enforcementMode=DISABLED

keycloak.policy-enforcer-config.paths[13].path=/webjars/*
keycloak.policy-enforcer-config.paths[13].enforcementMode=DISABLED


# unprotect prometheus 
keycloak.policy-enforcer-config.paths[14].path=/actuator/prometheus
keycloak.policy-enforcer-config.paths[14].enforcementMode=DISABLED

# end i adaded

# Turn off the logsou
#logging.level.root=logging.level.org.springframework.boot
#spring.main.banner-mode=
endpoint.check-conformity=http://controller:8080/check/conformity/
endpoint.openalpr=https://cloud.openalpr.com/api/search/plate
endpoint.openalpr.api.key=07e54767cbe4eb16a779747d7ef95582ee59c33f
spring.servlet.multipart.max-file-size=2000KB
spring.servlet.multipart.max-request-size=2000KB
